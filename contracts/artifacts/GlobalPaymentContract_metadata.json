{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_senderID",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_senderBankID",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_beneficiaryBankID",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_beneficiaryID",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_FX_rate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_transferamount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"name": "beneficiaryReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "print",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"name": "senderPaid",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "FX_rate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "beneficiaryBankID",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "beneficiaryID",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkBeneficiaryHasReceived",
				"outputs": [
					{
						"internalType": "bool",
						"name": "checkIfBeneficiaryHasReceived",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkPayerHadPaid",
				"outputs": [
					{
						"internalType": "bool",
						"name": "checkIfPayerHasPaid",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "addressGlobalPaymentContract",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTransferAmountBasedOnExchangeRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "newtransferamount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "payout_conditions",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "receiveFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "senderBankID",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "senderID",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "submitTransfer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "transferamount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"checkBeneficiaryHasReceived()": {
					"details": "This functions checks if the beneficiary has received the funds.",
					"returns": {
						"checkIfBeneficiaryHasReceived": "Boolean indicating if beneficiary has received."
					}
				},
				"checkPayerHadPaid()": {
					"details": "This functions checks if the sender has submitted the transfer.",
					"returns": {
						"checkIfPayerHasPaid": "Boolean indicating if payer has paid."
					}
				},
				"constructor": {
					"details": "This constructor is used to initiate a global payment smart contract.",
					"params": {
						"_FX_rate": "Exchange rate between the different currencies",
						"_beneficiaryBankID": "Address of the Bank of the Beneficiary",
						"_beneficiaryID": "Address of the Beneficiary",
						"_senderBankID": "Address of the Bank of the Sender",
						"_senderID": "Address of the Sender",
						"_transferamount": "The transferamount of the global payment"
					}
				},
				"getAddress()": {
					"details": "This functions returns the address of the GlobalPaymentContract",
					"returns": {
						"addressGlobalPaymentContract": "Address of the GlobalPaymentContract"
					}
				},
				"getTransferAmountBasedOnExchangeRate()": {
					"details": "This function calculates new transferamount based on the exchange rate.",
					"returns": {
						"newtransferamount": "New transferamount"
					}
				},
				"receiveFunds()": {
					"details": "This functions indicates that the funds have been received. Set boolean beneficiaryHasReceived and emit event beneficiaryReceived."
				},
				"submitTransfer()": {
					"details": "This functions indicates that the transfer has been submitted. Set boolean payerHasPaid and emit event senderPaid."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/GlobalPayment.sol": "GlobalPaymentContract"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/GlobalPayment.sol": {
			"keccak256": "0xd8d1532ee723f07da81d308d29a0e338ab28c8ea8b8d5166b61c2198f3c61add",
			"urls": [
				"bzz-raw://9092170b06c3bc13b203caaee93bd16192236a8b4666802f939f352789ebd227",
				"dweb:/ipfs/QmcsBfqjKdUoVxv7p3e1cFgPD4FMKtV1h7AWUpr9NuueoU"
			]
		}
	},
	"version": 1
}